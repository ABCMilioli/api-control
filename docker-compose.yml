
version: '3.8'

services:
  api-control:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-api_control}:${POSTGRES_PASSWORD:-your_password_here}@postgres:5432/${POSTGRES_DB:-api_control}?schema=public
      - POSTGRES_USER=${POSTGRES_USER:-api_control}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_password_here}
      - POSTGRES_DB=${POSTGRES_DB:-api_control}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-api_control}
      POSTGRES_USER: ${POSTGRES_USER:-api_control}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_password_here}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-shell", "pg_isready -U ${POSTGRES_USER:-api_control}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
